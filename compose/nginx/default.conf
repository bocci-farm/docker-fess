upstream backend {
  server fess01:8080;
  server fess02:8080;
}

server {
  listen 80;
  server_name fess.bocci.local;

  rewrite ^/(admin|login)(.*)$ http://fess-admin.bocci.local redirect;

  location @fallback {
    return 404;
  }

  location ~ ^/fess-\d+$ {
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://backend;

    #recursive_error_pages on;
    proxy_intercept_errors on;
    error_page 302 = @fallback;
  }

  location / {
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://backend;
  }
}

server {
  listen 80 default_server;
  server_name fess-admin.bocci.local;

  location = / {
    rewrite ^(.*)$ /admin/dashboard/ last;
  }

  location /logout {
    rewrite ^(.*)$ http://fess.bocci.local redirect;
  }

  location /error/notfound/ {
    return 404;
  }

  location / {
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://fess01:8080;
  }
}
